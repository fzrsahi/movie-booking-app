generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  username  String   @unique
  email     String   @unique
  birth     String
  hash      String
  age       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  balance   Balance?
  seats     Seats[]
  orders    Orders[]

  @@map("Users")
}

model Balance {
  id      String @id @default(uuid())
  balance Int
  user    User   @relation(fields: [userId], references: [id])
  userId  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Int
  releaseDate String
  ageRating   Int
  poster      String
  seats       Seats[]
  orders      Orders[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // @@fulltext([title])
  @@map("Movies")
}

model Seats {
  id         String  @id @default(uuid())
  seatNumber Int
  book       Boolean
  Movie      Movie   @relation(fields: [movieId], references: [id])
  movieId    Int

  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cancelAt DateTime?
}

model Orders {
  id      String  @id @default(uuid())
  User    User?   @relation(fields: [userId], references: [id])
  userId  String?
  Movie   Movie?  @relation(fields: [movieId], references: [id])
  movieId Int?

  seats Int[]

  total Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
